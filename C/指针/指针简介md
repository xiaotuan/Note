[toc]

从根本上看，指针是一个值为内存地址的变量（或数据对象）。假设一个指针变量名是 `ptr`，可以编写如下语句：

```c
ptr = &pooh;	// 把 pooh 的地址赋给 ptr
```

对于这条语句，我们说 `ptr` “指向” `pooh`。`ptr` 和 `&pooh` 的区别是 `ptr` 是变量，而 `&pooh` 是常量。或者说，`ptr` 是可修改的左值，而 `&pooh` 是右值。还可以把 `ptr` 执行别处：

```c
ptr = &bah;	// 把 ptr 指向 bah，而不是 pooh
```

要创建指针变量，先要声明指针变量的类型。假设想把 `ptr` 声明为存储 `int` 类型变量地址的指针，就要使用下面介绍的新运算符。

### 1. 间接运算符：*

假设已知 `ptr` 指向 `bah`，如下所示：

```c
ptr = &bah;
```

然后使用间接运算符 `*` 找出储存在 `bah` 中的值，该运算符有时也称为解引用运算符。

```c
val = *ptr;;	// 找出 ptr 指向的值
```

语句 `ptr = &bah;` 和 `val = *ptr;`  放在一起相当于下面的语句：

```c
val = bah;
```

